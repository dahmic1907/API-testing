{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-06T20:30:35.139Z",
    "end": "2022-05-06T20:30:36.110Z",
    "duration": 971,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "753287b0-3f87-4494-ba3d-d28a02c134fa",
      "title": "",
      "fullFile": "C:\\Users\\DT User\\API-testing\\test\\smoke.test.js",
      "file": "\\test\\smoke.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cc5e829c-3ead-49c6-afdf-aeb5fa58a2f1",
          "title": "Smoke test",
          "fullFile": "C:\\Users\\DT User\\API-testing\\test\\smoke.test.js",
          "file": "\\test\\smoke.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new user",
              "fullTitle": "Smoke test Add new user",
              "timedOut": false,
              "duration": 377,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.post('/auth/register').send({\n  email: \"user.user3a@gmail.com\",\n  firstName: \"New\",\n  lastName: \"User\",\n  password: 'user12345'\n}).set('Accept', 'application/json').expect(function (res, err) {\n  if (err) {\n    throw err;\n  }\n  response = res.body;\n  id = response.id;\n  email = response.email;\n  password = response.password;\n}).expect(200, done);",
              "err": {},
              "uuid": "44c0a4a2-9dde-4497-8f04-5a2c58ef6905",
              "parentUUID": "cc5e829c-3ead-49c6-afdf-aeb5fa58a2f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "New user logs in",
              "fullTitle": "Smoke test New user logs in",
              "timedOut": false,
              "duration": 264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.post('/auth/login?').query({\n  email: email,\n  password: 'user12345'\n}).set('Accept', 'application/json').expect(function (res, err) {\n  if (err) {\n    throw err;\n  }\n  response = res.body;\n  token = response.access_token;\n  _chai.assert.equal(\"New\", response.credentials.firstName);\n  _chai.assert.equal(\"User\", response.credentials.lastName);\n  _chai.assert.equal(email, response.credentials.email);\n}).expect(200, done);",
              "err": {},
              "uuid": "34f191e5-fcd2-4aeb-88d4-8fe2cec97eb1",
              "parentUUID": "cc5e829c-3ead-49c6-afdf-aeb5fa58a2f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get refreshed token for user",
              "fullTitle": "Smoke test Get refreshed token for user",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.get('/auth/token/refresh').set('Authorization', 'Bearer ' + token).end(function (err, res) {\n  if (err) throw err;\n  response = res.body;\n  token = response.access_token;\n}).expect(200);",
              "err": {},
              "uuid": "96521f21-592d-4437-9a44-f5159b738459",
              "parentUUID": "cc5e829c-3ead-49c6-afdf-aeb5fa58a2f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate token for logged user",
              "fullTitle": "Smoke test Validate token for logged user",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.get('/auth/token/validate').set('Authorization', 'Bearer ' + token).end(function (err, res) {\n  if (err) throw err;\n  response = res.body;\n  token = response.access_token;\n}).expect(200);",
              "err": {},
              "uuid": "6c5940f0-9fcf-4089-96df-cbde43e9cde8",
              "parentUUID": "cc5e829c-3ead-49c6-afdf-aeb5fa58a2f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "New user places bid for product with id = 2",
              "fullTitle": "Smoke test New user places bid for product with id = 2",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.post('/bid').set('Authorization', 'Bearer ' + token).send({\n  \"product\": {\n    \"id\": 2\n  },\n  \"user\": {\n    \"id\": id\n  },\n  \"amount\": ++amount\n}).set('Accept', 'application/json').expect(function (res, err) {\n  if (err) {\n    throw err;\n  }\n  response = res.body;\n  console.log(response);\n  _chai.assert.equal(2, response.product.id);\n  _chai.assert.equal(id, response.user.id);\n  _chai.assert.equal(amount, response.amount);\n}).expect(200, done);",
              "err": {},
              "uuid": "d49d98f6-3126-4462-90e2-c14a38801e66",
              "parentUUID": "cc5e829c-3ead-49c6-afdf-aeb5fa58a2f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44c0a4a2-9dde-4497-8f04-5a2c58ef6905",
            "34f191e5-fcd2-4aeb-88d4-8fe2cec97eb1",
            "96521f21-592d-4437-9a44-f5159b738459",
            "6c5940f0-9fcf-4089-96df-cbde43e9cde8",
            "d49d98f6-3126-4462-90e2-c14a38801e66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}