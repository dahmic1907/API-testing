{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2022-05-15T13:24:49.450Z",
    "end": "2022-05-15T13:24:50.266Z",
    "duration": 816,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6b76f102-2428-4f01-b8ed-5cd3a291f579",
      "title": "",
      "fullFile": "C:\\Users\\DT User\\API-testing\\test\\smoke.test.js",
      "file": "\\test\\smoke.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dbee0c94-3a6a-4893-a536-d38bb885f199",
          "title": "Smoke test",
          "fullFile": "C:\\Users\\DT User\\API-testing\\test\\smoke.test.js",
          "file": "\\test\\smoke.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new user",
              "fullTitle": "Smoke test Add new user",
              "timedOut": false,
              "duration": 334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.post('/auth/register').send({\n  email: user.email(),\n  firstName: user.firstName(),\n  lastName: user.lastName(),\n  password: user.password()\n}).set('Accept', 'application/json').expect(function (res, err) {\n  if (err) {\n    throw err;\n  }\n  response = res.body;\n  id = response.id;\n}).expect(200, done);",
              "err": {},
              "uuid": "bfa9c6f5-ecf3-4d57-9fd3-3973761d13c4",
              "parentUUID": "dbee0c94-3a6a-4893-a536-d38bb885f199",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "New user logs in",
              "fullTitle": "Smoke test New user logs in",
              "timedOut": false,
              "duration": 252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.post('/auth/login?').query({\n  email: user.email(),\n  password: user.password()\n}).set('Accept', 'application/json').expect(function (res, err) {\n  if (err) {\n    throw err;\n  }\n  response = res.body;\n  token = response.access_token;\n  _chai.assert.equal(user.firstName(), response.credentials.firstName);\n  _chai.assert.equal(user.lastName(), response.credentials.lastName);\n  _chai.assert.equal(user.email(), response.credentials.email);\n}).expect(200, done);",
              "err": {},
              "uuid": "49b2d2cb-e886-4b4c-90d7-9dc6f41dce77",
              "parentUUID": "dbee0c94-3a6a-4893-a536-d38bb885f199",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get refreshed token for user",
              "fullTitle": "Smoke test Get refreshed token for user",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.get('/auth/token/refresh').set('Authorization', 'Bearer ' + token).end(function (err, res) {\n  if (err) throw err;\n  response = res.body;\n  token = response.access_token;\n}).expect(200);",
              "err": {},
              "uuid": "e31db3e7-acd6-4b48-bd6c-7f3bb36ea9af",
              "parentUUID": "dbee0c94-3a6a-4893-a536-d38bb885f199",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate token for logged user",
              "fullTitle": "Smoke test Validate token for logged user",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.get('/auth/token/validate').set('Authorization', 'Bearer ' + token).end(function (err, res) {\n  if (err) throw err;\n  response = res.body;\n  token = response.access_token;\n}).expect(200);",
              "err": {},
              "uuid": "a5d427d9-6892-4d3b-86f8-5c9ca68da661",
              "parentUUID": "dbee0c94-3a6a-4893-a536-d38bb885f199",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "New user places bid for product with id = 2",
              "fullTitle": "Smoke test New user places bid for product with id = 2",
              "timedOut": false,
              "duration": 158,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request.post('/bid').set('Authorization', 'Bearer ' + token).send({\n  \"product\": {\n    \"id\": 2\n  },\n  \"user\": {\n    \"id\": id\n  },\n  \"amount\": ++amount\n}).set('Accept', 'application/json').expect(function (res, err) {\n  if (err) {\n    throw err;\n  }\n  response = res.body;\n  _chai.assert.equal(2, response.product.id);\n  _chai.assert.equal(id, response.user.id);\n  _chai.assert.equal(amount, response.amount);\n}).expect(200, done);",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at C:\\Users\\DT User\\API-testing\\test\\/smoke.test.js:102:50\n    at C:\\Users\\DT User\\API-testing\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (node_modules\\superagent\\src\\node\\index.js:923:3)\n    at fn (node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:402:35)\n    at endReadableNT (node:internal/streams/readable:1343:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)",
                "diff": null
              },
              "uuid": "ad2e1e7e-f3d5-4876-a0ee-e1cd52194337",
              "parentUUID": "dbee0c94-3a6a-4893-a536-d38bb885f199",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bfa9c6f5-ecf3-4d57-9fd3-3973761d13c4",
            "49b2d2cb-e886-4b4c-90d7-9dc6f41dce77",
            "e31db3e7-acd6-4b48-bd6c-7f3bb36ea9af",
            "a5d427d9-6892-4d3b-86f8-5c9ca68da661"
          ],
          "failures": [
            "ad2e1e7e-f3d5-4876-a0ee-e1cd52194337"
          ],
          "pending": [],
          "skipped": [],
          "duration": 748,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}